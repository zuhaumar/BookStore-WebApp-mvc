@model Ecommerce.Models.User
@{
    ViewData["Title"] = "Signup";
}

<h2>Signup</h2>

<div class="signup-form">
    @using (Html.BeginForm("Signup", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Enter your username" })
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter your password" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign Up" class="btn btn-primary" />
            </div>
        </div>

        <div class="clearfix"></div> 

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger" role="alert">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
        }
    }
</div>

<style>
    .form-group {
        margin-bottom: 20px; 
    }
</style>